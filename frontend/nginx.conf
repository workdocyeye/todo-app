server {
    listen 80;             # 监听 80 端口
    server_name localhost; # 服务器名（可以根据需要修改）

    root /usr/share/nginx/html; # 静态文件的根目录 (与 Dockerfile 中 COPY 的目标一致)
    index index.html index.htm;   # 默认索引文件

    # 处理 API 请求的代理
    location /api {
        # 将 /api 开头的请求转发给后端服务
        # 'http://todo-backend-service:3001' 是一个示例目标地址
        # 在 Sealos 中，你通常需要将其设置为后端应用的服务名和端口
        # 一种常见方式是使用 Kubernetes 服务名，例如 'http://<后端应用名>.<命名空间>.svc:<端口>'
        # 或者，如果 Sealos 提供了简单的服务发现，可能直接使用后端应用名即可
        # 现在使用 Sealos 内部服务名
        proxy_pass http://todo-backend:3001; # <--- 确认这里是 todo-backend

        # 设置一些代理头，以便后端能获取真实信息
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # 处理单页应用 (SPA) 路由
    # 对于所有非 /api 且文件不存在的请求，都返回 index.html
    location / {
        try_files $uri $uri/ /index.html;
    }

    # 可选：错误页面配置
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}